@model IndexUserModel
@using AIDungeonPrompts.Application.Extensions
@{
	ViewData["Title"] = "My Profile";
}

<h2>My Profile</h2>
<br />
<div class="row">
	@if (Model.IsTransient)
	{
		<div class="col-12">
			<p>
				<strong>You are not registered. If your browser data is cleared you will lose access to your prompts!</strong>
				<br />
				<br />
				<a class="btn btn-primary" asp-action="Register">Click here to register</a>
			</p>
		</div>
	}
	else
	{
		<div class="col-12">
			<div class="form-group">
				@Html.LabelFor(m => m.Username)
				<input disabled asp-for="Username" class="form-control" />
			</div>
			@if (Model.UserRoles != AIDungeonPrompts.Domain.Enums.RoleEnum.None)
			{
				<div class="form-group">
					<label>Roles</label>
					<input disabled class="form-control" value="@Model.UserRoles" />
				</div>
			}
			<div class="d-flex">
				<a class="btn btn-secondary ml-auto" asp-action="Edit">Edit</a>
			</div>
		</div>
	}
</div>
<br />
<div class="row">
	<div class="col-12">
		<h3>My Prompts</h3>
		<br />
	</div>
	@if (Model.UserPrompts.Results.Count > 0)
	{
		@Html.DisplayFor(m => m.UserPrompts.Results, new { DisplayEdit = true })
	}
	else
	{
		<div class="col-12">
			<strong>You haven't created any prompts!</strong>
			<br />
			<br />
			<a class="btn btn-primary" asp-action="Create" asp-controller="Prompts">Click here to create one</a>
		</div>
	}
</div>

@if (Model.UserPrompts.Results.Count > 0 && Model.UserPrompts.TotalPages > 1)
{
	var page = Model.Page ?? 1;
	<nav>
		<ul class="pagination justify-content-center">
			<li class="page-item @(page < 2 ? "disabled" : "")">
				<a class="page-link"
				   tabindex="-1"
				   asp-action="Index"
				   asp-route-Page="@(Model.Page == null ? 1 : Model.Page.Value - 1)">
					Previous
				</a>
			</li>
			@if (page > 2)
			{
				<li class="page-item">
					<a class="page-link"
					   tabindex="-1"
					   asp-action="Index"
					   asp-route-Page="1">
						1
					</a>
				</li>
			}
			@if (page > 3)
			{
				<li class="page-item disabled">
					<span class="page-link">
						...
					</span>
				</li>
			}
			@if (page - 1 > 0)
			{
				<li class="page-item">
					<a class="page-link"
					   tabindex="-1"
					   asp-action="Index"
					   asp-route-Page="@(page - 1)">
						@(page - 1)
					</a>
				</li>
			}
			<li class="page-item disabled">
				<span class="page-link">
					@(Model.Page ?? 1)
				</span>
			</li>
			@if (page + 1 <= Model.UserPrompts.TotalPages)
			{
				<li class="page-item">
					<a class="page-link"
					   tabindex="-1"
					   asp-action="Index"
					   asp-route-Page="@(page + 1)">
						@(page + 1)
					</a>
				</li>
			}
			@if (page < Model.UserPrompts.TotalPages - 2)
			{
				<li class="page-item disabled">
					<span class="page-link">
						...
					</span>
				</li>
			}
			@if (page < Model.UserPrompts.TotalPages - 1)
			{
				<li class="page-item">
					<a class="page-link"
					   tabindex="-1"
					   asp-action="Index"
					   asp-route-Page="@Model.UserPrompts.TotalPages">
						@Model.UserPrompts.TotalPages
					</a>
				</li>
			}
			<li class="page-item @(page < Model.UserPrompts.TotalPages ? "" : "disabled")">
				<a class="page-link"
				   tabindex="-1"
				   asp-action="Index"
				   asp-route-Page="@(Model.Page == null ? 2 : Model.Page.Value + 1)">
					Next
				</a>
			</li>
		</ul>
	</nav>
}
