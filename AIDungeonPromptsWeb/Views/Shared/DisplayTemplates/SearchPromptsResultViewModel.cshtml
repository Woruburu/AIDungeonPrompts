@model AIDungeonPrompts.Application.Queries.SearchPrompts.SearchPromptsResultViewModel
@{
	var diplayEdit = ViewData["DisplayEdit"] != null ? (bool)ViewData["DisplayEdit"] : false;
	var showEdit = false;
	if (userService.TryGetCurrentUser(out var user) && user!.Id == Model.OwnerId)
	{
		showEdit = true;
	}
}
<div class="col-sm-12 col-md-6 mb-4">
	<div class="card">
		<div class="card-body">
			<a asp-controller="Prompts" asp-action="View" asp-route-id="@Model.Id">
				<h5 class="card-title">@Model.Title</h5>
			</a>
			<p tabindex="-1" class="tags truncated">
				Created: @Model.DateCreated.ToString("yyyy/MM/dd")
				<br/>
				@Html.DisplayNameFor(_ => Model.SearchPromptsTagViewModel):
				@if (Model.Nsfw)
				{
					<a class="badge badge-danger" asp-controller="Home" asp-action="Index" asp-route-NsfwSetting="2">
						NSFW
					</a>
				}
				@foreach (var tag in Model.SearchPromptsTagViewModel)
				{
					<a class="badge badge-primary" asp-controller="Home" asp-action="Index" asp-route-Tags="@tag.Name">
						@tag.Name
					</a>
				}
			</p>
			<p class="card-text truncated">@(!string.IsNullOrWhiteSpace(Model.Description) ? Model.Description : Model.PromptContent)</p>
		</div>
		<div class="card-footer bg-transparent d-flex" style="border:0">
			<div class="ml-auto"></div>
			@if (diplayEdit && showEdit) { 
				<a asp-action="Edit" asp-controller="Prompts" asp-route-id="@Model.Id" class="align-self-end btn btn-outline-success mr-2 px-3">Edit</a>			
			}
			<a asp-controller="Prompts" asp-action="View" asp-route-id="@Model.Id" class="align-self-end btn btn-primary">View Prompt</a>
		</div>
	</div>
</div>
