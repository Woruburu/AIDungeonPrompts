@model SearchViewModel
@using AIDungeonPrompts.Application.Queries.SearchPrompts
@{ ViewData["Title"] = "Search"; }

<h2>Search</h2>
<br/>
<form asp-controller="Search" asp-action="Index" method="get">
	<div class="row mb-4">
		<div class="col-sm-9 col-md-10">
			<div class="row">
				<div class="col-sm-6 mb-4">
					<input class="form-control" asp-for="Query" placeholder="Query Title" />
				</div>
				<div class="col-sm-6 mb-4">
					<select class="form-control" asp-for="NsfwSetting" asp-items="Html.GetEnumSelectList<SearchNsfw>()"></select>
				</div>
				<div class="col-sm-6 mb-4">
					<input class="form-control" asp-for="Tags" placeholder="Tags (comma seperated)" />
				</div>
				<div class="col-sm-6 mb-4">
					<div class="form-check">
						<input class="form-check-input" asp-for="Reverse" />
						@Html.LabelFor(m => m.Reverse, new { @class = "form-check-label" })
					</div>
				</div>
			</div>
		</div>
		<div class="col-sm-3 col-md-2 mb-4">
			<div class="d-flex flex-sm-row-reverse">
				<button class="btn btn-lg btn-primary">Search</button>
			</div>
		</div>
	</div>
</form>

<div class="row">
	@Html.DisplayFor(m => m.SearchResult.Results)
</div>

@{
	var page = Model.Page ?? 1;
	var data = new Dictionary<string, string>
	{
		{ "Query", Model.Query ?? string.Empty },
		{ "Tags", Model.Tags ?? string.Empty },
		{ "NsfwSetting", Model.NsfwSetting.ToString() },
		{ "Reverse", Model.Reverse.ToString() }
	};
}
<nav aria-label="Page navigation example">
	<ul class="pagination justify-content-center">
		<li class="page-item @(page < 2 ? "disabled" : "")">
			<a class="page-link"
			   tabindex="-1"
			   asp-action="Index"
			   asp-all-route-data="data"
			   asp-route-Page="@(Model.Page == null ? 1 : Model.Page.Value - 1)">
				Previous
			</a>
		</li>
		@if(page > 2)
		{
			<li class="page-item">
				<a class="page-link"
				   tabindex="-1"
				   asp-action="Index"
				   asp-all-route-data="data"
				   asp-route-Page="1">
					1
				</a>
			</li>
		}
		@if(page > 3)
		{
			<li class="page-item disabled">
				<span class="page-link">
					...
				</span>
			</li>
		}
		@if(page-1 > 0)
		{
			<li class="page-item">
				<a class="page-link"
				   tabindex="-1"
				   asp-action="Index"
				   asp-all-route-data="data"
				   asp-route-Page="@(page-1)">
					@(page-1)
				</a>
			</li>
		}
		<li class="page-item disabled">
			<span class="page-link">
				@(Model.Page ?? 1)
			</span>
		</li>
		@if(page+1 <= Model.SearchResult.TotalPages)
		{
			<li class="page-item">
				<a class="page-link"
				   tabindex="-1"
				   asp-action="Index"
				   asp-all-route-data="data"
				   asp-route-Page="@(page+1)">
					@(page+1)
				</a>
			</li>
		}
		@if (page < Model.SearchResult.TotalPages - 2)
		{
			<li class="page-item disabled">
				<span class="page-link">
					...
				</span>
			</li>
		}
		@if(page < Model.SearchResult.TotalPages-1)
		{			
			<li class="page-item">
				<a class="page-link"
				   tabindex="-1"
				   asp-action="Index"
				   asp-all-route-data="data"
				   asp-route-Page="@Model.SearchResult.TotalPages">
					@Model.SearchResult.TotalPages
				</a>
			</li>
		}
		<li class="page-item @(page < Model.SearchResult.TotalPages ? "" : "disabled")">
			<a class="page-link"
			   tabindex="-1"
			   asp-action="Index"
			   asp-all-route-data="data"
			   asp-route-Page="@(Model.Page == null ? 2 : Model.Page.Value + 1)">
				Next
			</a>
		</li>
	</ul>
</nav>
